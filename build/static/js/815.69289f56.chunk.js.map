{"version":3,"file":"static/js/815.69289f56.chunk.js","mappings":"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","sources":["webpack://react-way-of-samurai/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","utils/onError.js","../javascript/esm|D:/social-network/social-network-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../javascript/esm|D:/social-network/social-network-react/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../javascript/esm|D:/social-network/social-network-react/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../javascript/esm|D:/social-network/social-network-react/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ySn33\",\"userPhoto\":\"ProfileInfo_userPhoto__UPZgb\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = ({ pathname, ...props }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pathname == \"/profile\" ? <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}><b>Status: </b>{props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                            value={status} />\r\n                    </div>\r\n                }\r\n            </div> : <div>{status}</div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport s2 from '../../common/FormsControls/FormsControls.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport { createField } from './../../common/FormsControls/FormsControls';\r\nimport { Input } from '../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form';\r\nimport { required, boolRequired } from './../../../utils/validators/validators';\r\nimport { onError } from '../../../utils/onError';\r\nimport HOST from '../../../env'\r\n\r\nconst ProfileInfo = (props) => {\r\n    let { status, updateStatus, profile, setProfilePhoto, location: { pathname }, setProfileData } = props\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n\r\n    let setPhoto = (e) => {\r\n        e.target.files.length && setProfilePhoto(e.target.files[0])\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        setProfileData(formData).then(() => { setEditMode(false) })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photo} className={s.userPhoto} onError={onError} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} pathname={pathname} />\r\n                {pathname == \"/profile\" && <input type=\"file\" onChange={setPhoto} />}\r\n\r\n                {pathname == \"/profile\" && !editMode && <div><button onClick={() => { setEditMode(true) }}>Edit</button></div>}\r\n                {editMode ? <EditProfileDataRF setEditMode={setEditMode}\r\n                    onSubmit={onSubmit}\r\n                    contacts={profile.contacts}\r\n                    // profile={profile}\r\n                    // nickname={props.nickname}\r\n                /> : <ProfileData profile={profile} nickname={props.nickname} />}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EditProfileData = (props) => {\r\n    let { handleSubmit, contacts, setEditMode, error } = props\r\n    return <div>\r\n        <button onClick={() => { setEditMode(false) }}>Close</button>\r\n        <form onSubmit={handleSubmit}>\r\n            {error && <div className={s2.formSummaryError}> {error} </div>}\r\n            <button >Save</button>\r\n            {createField('nickname', 'nickname', [], Input)}\r\n            {createField('fullName', 'fullName', [], Input)}\r\n            {createField('aboutMe', 'aboutMe', [], Input)}\r\n            {createField('lookingForAJob', 'lookingForAJob', [], Input)}\r\n            {createField('lookingForAJobDescription', 'lookingForAJobDescription', [], Input)}\r\n            {Object.keys(contacts).map(key => createField(key, 'contacts.' + key, [], Input))}\r\n            {createField('country', 'location.country', [], Input)}\r\n            {createField('city', 'location.city', [], Input)}\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport const EditProfileDataRF = reduxForm({ form: 'profileData' })(EditProfileData)\r\n\r\n\r\nexport const ProfileData = (props) => {\r\n    let { fullName, aboutMe, lookingForAJob, lookingForAJobDescription, contacts, location: { country, city } } = props.profile;\r\n    return <>\r\n        <div><b>nickname:</b> {props.nickname}</div>\r\n        <div><b>fullName:</b> {fullName}</div>\r\n        <div><b>aboutMe:</b> {aboutMe}</div>\r\n        <div><b>lookingForAJob:</b> {lookingForAJob}</div>\r\n        <div><b>lookingForAJobDescription:</b> {lookingForAJobDescription}</div>\r\n        <br />\r\n        <div><b>contacts:</b> {Object.keys(contacts).map(key => <div><b>{key}:</b> {contacts[key]}</div>)}</div>\r\n        <br />\r\n        <div><b>country:</b> {country}</div>\r\n        <div><b>city:</b> {city}</div>\r\n    </>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__kgoDZ\",\"posts\":\"MyPosts_posts__NZp0Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__1zgu2\"};","import s from './Post.module.css';\r\nimport { onError } from '../../../../utils/onError';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={props.photo} onError={onError} />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n      <div>\r\n        <button onClick={() => props.onDeletePost(props._id)}>Delete</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet AddNewPostForm = (props) => {\r\n    if (props.submitSucceeded)\r\n        props.reset()\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let onAddPost = (values) => {\r\n        props.addPostThunk(values.newPostText);\r\n    }\r\n\r\n    let onDeletePost = (postId) => {\r\n        props.deletePostThunk(postId);\r\n    }\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post _id={p._id}\r\n                message={p.message}\r\n                likesCount={p.likesCount}\r\n                photo={props.photo}\r\n                onDeletePost={onDeletePost}\r\n            />);\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>Posts</h3>\r\n            {props.location.pathname === '/profile' && <AddNewPostFormRedux onSubmit={onAddPost} />}\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {addPostThunk, deletePostThunk} from \"../../../redux/profile-reducer\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    let photo = null\r\n    if(state.profilePage.profile)\r\n        photo = state.profilePage.profile.photo\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        photo\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addPost: (newPostText) => {\r\n//             dispatch(setPostsActionCreator(newPostText));\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst MyPostsContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {addPostThunk, deletePostThunk})\r\n)(MyPosts) \r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo setProfileData={props.setProfileData}\r\n                location={props.location}\r\n                setProfilePhoto={props.setProfilePhoto}\r\n                login={props.login}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                nickname={props.nickname}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfileAndPosts, updateStatus, setProfilePhoto, setProfileData } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfileAndPosts(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location ||\r\n            prevProps.isAuth !== this.props.isAuth\r\n        ) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                setProfilePhoto={this.props.setProfilePhoto}\r\n                location={this.props.location}\r\n                setProfileData={this.props.setProfileData}\r\n                nickname={this.props.nickname}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        nickname: state.auth.nickname\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfileAndPosts, getStatus, updateStatus, setProfilePhoto, setProfileData }),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import userPhoto from \"../assets/images/user.png\"\r\n\r\nexport const onError = ({currentTarget}) => {\r\n    currentTarget.onerror = null\r\n    currentTarget.src = userPhoto\r\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["pathname","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","EditProfileDataRF","reduxForm","form","handleSubmit","contacts","error","onClick","onSubmit","className","s2","createField","Input","Object","keys","map","key","ProfileData","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","location","country","city","nickname","setProfilePhoto","setProfileData","Preloader","s","src","photo","onError","type","target","files","length","formData","then","message","likesCount","onDeletePost","_id","AddNewPostFormRedux","submitSucceeded","reset","Field","name","component","Textarea","placeholder","React","postId","deletePostThunk","postsElements","posts","reverse","p","values","addPostThunk","newPostText","compose","withRouter","connect","state","profilePage","MyPosts","login","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfileAndPosts","getStatus","refreshProfile","prevProps","isAuth","auth","onerror","userPhoto","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}