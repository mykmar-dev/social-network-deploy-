{"version":3,"file":"static/js/193.4b6fa13a.chunk.js","mappings":"sMACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCWhL,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACH,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCDlC,EAJgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMO,W,iDCCtCC,GAAcC,EAAAA,EAAAA,IAAiB,IAmBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAjBuB,SAACX,GAGpB,OAFGA,EAAMY,iBACLZ,EAAMa,SAEN,kBAAMC,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,GAAUZ,GACrBa,YAAY,qBAAqBf,KAAK,sBAEjD,0BACI,6CCgBhB,EA3BgB,SAACN,GAEb,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBJ,GAAIyB,EAAEzB,IAAZyB,EAAEzB,OAC3E0B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE5B,OAMpF,OAAKF,EAAM+B,QAGP,iBAAK5B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACMoB,KAEN,gBAAKrB,UAAWC,EAAAA,SAAhB,UACI,yBAAOwB,OAGX,SAAC,EAAD,CAAgBd,SAfJ,SAACkB,GACjBhC,EAAMiC,YAAYD,EAAOE,uBAGH,SAAC,KAAD,CAAU7B,GAAI,Y,0DCdxC8B,EAA6B,SAACb,GAAD,MAAY,CACzCS,OAAQT,EAAMc,KAAKL,SCevB,GAAeM,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,UDPR,SAACO,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAK3C,MAAM+B,QAET,SAACU,GAAD,UAAeE,KAAK3C,SAFI,SAAC,KAAD,CAAUK,GAAG,eAJT,GAEXuC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,KCE7E,CAGEG","sources":["webpack://react-way-of-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__o5-Ye\",\"dialogsItems\":\"Dialogs_dialogsItems__DHX0K\",\"active\":\"Dialogs_active__qbDJ-\",\"messages\":\"Dialogs_messages__pRJjl\",\"message\":\"Dialogs_message__Ybe1P\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    if(props.submitSucceeded)\r\n        props.reset()\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","submitSucceeded","reset","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}